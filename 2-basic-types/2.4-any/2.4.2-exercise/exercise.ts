// --------------------------------------------------------------------------
// ✅ TypeScript의 `any` 타입
// --------------------------------------------------------------------------

// 1. `any` 타입으로 변수를 선언하고 문자열 값을 할당하세요.
let anime: any = "shinchan";

// 2. 그 변수를 숫자로 다시 할당하세요.
anime = 35;

// 3. 그 변수를 name 프로퍼티가 "TS"인 객체로 다시 할당하세요.
anime = {
  name: "TS",
};

// 4. 매개변수 타입이 `any`인 함수를 만들고, 그 타입과 값을 로그로 출력하세요.
function add(value: any) {
  console.log(value);
}

// 5. 그 함수를 문자열, 숫자, 객체, 배열 등 다양한 타입의 인자로 호출하세요.
add("HI");
add(23);
add([3, "Hi"]);

// 6. TypeScript에서 `any`를 사용하는 것이 왜 유용할 수도 있고, 동시에 문제가 될 수도 있는지 설명하세요.
// any는 모든 값이 올 수 있어 어떤 값이 올 지 모르는 경우에 사용 시 유용하지만, 동시에 type 검사를 비활성화 하여 타입 안정성을 잃어 타입스크립트의 장점이 사라진다.
